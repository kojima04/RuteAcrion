//=============================================================
// Texture.h
// テクスチャ付き四角形描画クラスの定義
//=============================================================
#pragma once

//=============================================================
// include
//=============================================================
#include "DrawObject.h"

#include <d3d9.h>
#include <d3dx9.h>
#include <string>

//=============================================================
// Texture
// テクスチャ付き四角形描画クラス
// 基底クラス
//		DrawObject	: 描画オブジェクトの基底クラス
//=============================================================
class F_String :
	public DrawObject
{
public:
	//---------------------------------------------------------
	// コンストラクタ
	//---------------------------------------------------------
	F_String();
	F_String(std::string name,float X,float Y,float Z,float H,float W);

	//---------------------------------------------------------
	// 仮想デストラクタ
	//---------------------------------------------------------
	~F_String();

private:
	//位置のパラメータ
	float x,y,z,width,height;
	//角度
	float Xangle,Yangle,Zangle;
	//テクスチャのファイル名
	std::string FileName;

	// マトリックス
	D3DXMATRIX m_proj;	// 射影行列	
	D3DXMATRIX m_world;	// ワールド行列

	// 頂点バッファの構造体
	struct MY_VERTEX
	{
		D3DXVECTOR3	p;		// 位置
		DWORD		color;	// 色
		D3DXVECTOR2	t;		// テクスチャ座標
	};

	// 頂点バッファのフォーマットの定義
	const DWORD MY_VERTEX_FVF;

	// 頂点バッファへのポインタ
	LPDIRECT3DVERTEXBUFFER9 m_pVB;

	// テクスチャへのポインタ
	LPDIRECT3DTEXTURE9		m_pTexture;

public:
	//---------------------------------------------------------
	// テクスチャ付き四角形を生成
	// 引数
	//		pD3DDevice : IDirect3DDevice9 インターフェイスへのポインタ
	// 戻り値
	//		成功したらS_OK
	//---------------------------------------------------------
	HRESULT Create(LPDIRECT3DDEVICE9 pD3DDevice);

	//---------------------------------------------------------
	// テクスチャ付き四角形を描画
	// 引数
	//		pD3DDevice : IDirect3DDevice9 インターフェイスへのポインタ
	//---------------------------------------------------------
	void Draw(LPDIRECT3DDEVICE9 pD3DDevice);
	void Update();
	


};
